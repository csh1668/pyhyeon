name: Deploy GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Rust (nightly)
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: wasm32-unknown-unknown

      - name: Cache Rust build (target/ and registry)
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
          cache-on-failure: true

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Get pnpm store path
        id: pnpm-store
        working-directory: web
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('web/pnpm-lock.yaml', 'web/package-lock.json', 'web/yarn.lock', 'web/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install deps
        working-directory: web
        run: pnpm i --frozen-lockfile=false

      - name: Build WASM
        working-directory: web
        run: pnpm run wasm

      - name: Export static site
        working-directory: web
        env:
          CI: true
          GITHUB_ACTIONS: true
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: pnpm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: web/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

